Lendo do arquivo SuccessFile.f
Line: 1 Column: 1 public  public  28
Line: 1 Column: 8 class  class  12
Line: 1 Column: 14 SuccessClass  <IDENT>  67
Line: 1 Column: 27 extends  extends  15
Line: 1 Column: 35 ErrorClass  <IDENT>  67
Line: 1 Column: 45 {  {  51
Line: 11 Column: 2 int  int  23
Line: 11 Column: 6 inteiroGlobal  <IDENT>  67
Line: 11 Column: 20 =  =  32
Line: 11 Column: 22 1  <int_constant>  59
Line: 11 Column: 23 ;  ;  55
Line: 12 Column: 2 string  string  24
Line: 12 Column: 9 stringGlobal  <IDENT>  67
Line: 12 Column: 22 =  =  32
Line: 12 Column: 24 "string"  <string_constant>  60
Line: 12 Column: 32 ;  ;  55
Line: 13 Column: 2 char  char  25
Line: 13 Column: 7 caracterGlobal  <IDENT>  67
Line: 13 Column: 22 =  =  32
Line: 13 Column: 24 "a"  <string_constant>  60
Line: 13 Column: 27 ;  ;  55
Line: 14 Column: 2 boolean  <IDENT>  67
Line: 14 Column: 10 booleanoGlobal  <IDENT>  67
Line: 14 Column: 25 =  =  32
Line: 14 Column: 27 true  <BOOLEAN>  44
Line: 14 Column: 31 ;  ;  55
Line: 15 Column: 2 float  float  27
Line: 15 Column: 8 floatGlobal  <IDENT>  67
Line: 15 Column: 20 =  =  32
Line: 15 Column: 22 0.10  <float_literal>  63
Line: 15 Column: 26 ;  ;  55
Line: 19 Column: 2 constructor  constructor  13
Line: 19 Column: 13 (  (  49
Line: 19 Column: 14 boolean  <IDENT>  67
Line: 19 Column: 22 paramBool  <IDENT>  67
Line: 19 Column: 31 ,  ,  56
Line: 19 Column: 33 int  int  23
Line: 19 Column: 37 paramInt  <IDENT>  67
Line: 19 Column: 45 )  )  50
Line: 19 Column: 46 {  {  51
Line: 20 Column: 3 Success  <IDENT>  67
Line: 20 Column: 11 success  <IDENT>  67
Line: 20 Column: 19 =  =  32
Line: 20 Column: 21 new  new  18
Line: 20 Column: 25 Success  <IDENT>  67
Line: 20 Column: 32 (  (  49
Line: 20 Column: 33 )  )  50
Line: 20 Column: 34 ;  ;  55
Line: 21 Column: 3 super  super  22
Line: 21 Column: 8 (  (  49
Line: 21 Column: 9 paramInt  <IDENT>  67
Line: 21 Column: 17 ,  ,  56
Line: 21 Column: 18 paramBool  <IDENT>  67
Line: 21 Column: 27 )  )  50
Line: 21 Column: 28 ;  ;  55
Line: 22 Column: 3 boolean  <IDENT>  67
Line: 22 Column: 11 outroBoleano  <IDENT>  67
Line: 22 Column: 24 =  =  32
Line: 22 Column: 26 NOT  <IDENT>  67
Line: 22 Column: 30 paramBool  <IDENT>  67
Line: 22 Column: 40 OR  <IDENT>  67
Line: 22 Column: 43 (  (  49
Line: 22 Column: 44 paramInt  <IDENT>  67
Line: 22 Column: 53 ==  ==  35
Line: 22 Column: 56 globalInt  <IDENT>  67
Line: 22 Column: 65 )  )  50
Line: 22 Column: 66 ;  ;  55
Line: 23 Column: 3 boolean  <IDENT>  67
Line: 23 Column: 11 resultBoolean  <IDENT>  67
Line: 23 Column: 25 =  =  32
Line: 23 Column: 27 paramBool  <IDENT>  67
Line: 23 Column: 37 XOR  <IDENT>  67
Line: 23 Column: 41 outroBoleano  <IDENT>  67
Line: 23 Column: 54 AND  <IDENT>  67
Line: 23 Column: 58 paramBool  <IDENT>  67
Line: 23 Column: 67 ;  ;  55
Line: 24 Column: 2 }  }  52
Line: 26 Column: 2 public  public  28
Line: 26 Column: 9 int  int  23
Line: 26 Column: 13 init  <IDENT>  67
Line: 26 Column: 18 (  (  49
Line: 26 Column: 19 )  )  50
Line: 26 Column: 21 {  {  51
Line: 27 Column: 3 int  int  23
Line: 27 Column: 7 i  <IDENT>  67
Line: 27 Column: 9 =  =  32
Line: 27 Column: 11 -  -  40
Line: 27 Column: 12 1  <int_constant>  59
Line: 27 Column: 13 ;  ;  55
Line: 28 Column: 3 float  float  27
Line: 28 Column: 9 floatInterno  <IDENT>  67
Line: 28 Column: 22 =  =  32
Line: 28 Column: 24 -  -  40
Line: 28 Column: 25 2.10  <float_literal>  63
Line: 28 Column: 29 ;  ;  55
Line: 30 Column: 3 return  return  21
Line: 30 Column: 10 i  <IDENT>  67
Line: 30 Column: 11 ;  ;  55
Line: 31 Column: 2 }  }  52
Line: 33 Column: 2 public  public  28
Line: 33 Column: 9 int  int  23
Line: 33 Column: 13 funcao  <IDENT>  67
Line: 33 Column: 20 (  (  49
Line: 33 Column: 21 )  )  50
Line: 33 Column: 22 {  {  51
Line: 35 Column: 3 for  for  16
Line: 35 Column: 6 (  (  49
Line: 35 Column: 7 int  int  23
Line: 35 Column: 11 i  <IDENT>  67
Line: 35 Column: 13 =  =  32
Line: 35 Column: 15 0  <int_constant>  59
Line: 35 Column: 16 ,  ,  56
Line: 35 Column: 18 i  <IDENT>  67
Line: 35 Column: 19 <  <  34
Line: 35 Column: 20 5  <int_constant>  59
Line: 35 Column: 21 ,  ,  56
Line: 35 Column: 23 i  <IDENT>  67
Line: 35 Column: 24 +  +  39
Line: 35 Column: 25 +  +  39
Line: 35 Column: 26 )  )  50
Line: 35 Column: 28 {  {  51
Line: 36 Column: 4 if  if  17
Line: 36 Column: 6 (  (  49
Line: 36 Column: 7 intGlobal  <IDENT>  67
Line: 36 Column: 17 <=  <=  36
Line: 36 Column: 20 i  <IDENT>  67
Line: 36 Column: 21 )  )  50
Line: 36 Column: 22 {  {  51
Line: 37 Column: 5 if  if  17
Line: 37 Column: 7 (  (  49
Line: 37 Column: 8 intGlobal  <IDENT>  67
Line: 37 Column: 18 !=  !=  38
Line: 37 Column: 21 i  <IDENT>  67
Line: 37 Column: 22 )  )  50
Line: 37 Column: 23 {  {  51
Line: 38 Column: 6 i  <IDENT>  67
Line: 38 Column: 8 =  =  32
Line: 38 Column: 10 i  <IDENT>  67
Line: 38 Column: 11 *  *  41
Line: 38 Column: 12 i  <IDENT>  67
Line: 38 Column: 13 ;  ;  55
Line: 39 Column: 6 i  <IDENT>  67
Line: 39 Column: 8 =  =  32
Line: 39 Column: 10 i  <IDENT>  67
Line: 39 Column: 11 /  /  42
Line: 39 Column: 12 1  <int_constant>  59
Line: 39 Column: 13 ;  ;  55
Line: 40 Column: 6 i  <IDENT>  67
Line: 40 Column: 8 =  =  32
Line: 40 Column: 10 i  <IDENT>  67
Line: 40 Column: 11 %  %  43
Line: 40 Column: 12 2  <int_constant>  59
Line: 40 Column: 13 ;  ;  55
Line: 41 Column: 6 int  int  23
Line: 41 Column: 10 const  <IDENT>  67
Line: 41 Column: 16 =  =  32
Line: 41 Column: 18 null  null  61
Line: 41 Column: 22 ;  ;  55
Line: 42 Column: 6 i  <IDENT>  67
Line: 42 Column: 7 -  -  40
Line: 42 Column: 8 -  -  40
Line: 42 Column: 9 ;  ;  55
Line: 43 Column: 5 }  }  52
Line: 44 Column: 5 break  break  11
Line: 44 Column: 10 ;  ;  55
Line: 45 Column: 4 }  }  52
Line: 45 Column: 6 else  else  14
Line: 45 Column: 11 {  {  51
Line: 46 Column: 5 i  <IDENT>  67
Line: 46 Column: 6 +  +  39
Line: 46 Column: 7 +  +  39
Line: 46 Column: 8 ;  ;  55
Line: 47 Column: 4 }  }  52
Line: 48 Column: 3 }  }  52
Line: 49 Column: 3 byte  <IDENT>  67
Line: 49 Column: 8 teclado  <IDENT>  67
Line: 49 Column: 16 =  =  32
Line: 49 Column: 18 (  (  49
Line: 49 Column: 19 byte  <IDENT>  67
Line: 49 Column: 23 )  )  50
Line: 49 Column: 25 System  <IDENT>  67
Line: 49 Column: 31 .  .  57
Line: 49 Column: 32 in  <IDENT>  67
Line: 49 Column: 34 .  .  57
Line: 49 Column: 35 read  read  20
Line: 49 Column: 39 (  (  49
Line: 49 Column: 40 )  )  50
Line: 49 Column: 41 ;  ;  55
Line: 50 Column: 3 System  <IDENT>  67
Line: 50 Column: 9 .  .  57
Line: 50 Column: 10 out  <IDENT>  67
Line: 50 Column: 13 .  .  57
Line: 50 Column: 14 print  print  19
Line: 50 Column: 19 (  (  49
Line: 50 Column: 20 "oi"  <string_constant>  60
Line: 50 Column: 24 )  )  50
Line: 50 Column: 25 ;  ;  55
Line: 53 Column: 3 return  return  21
Line: 53 Column: 10 i  <IDENT>  67
Line: 53 Column: 11 ;  ;  55
Line: 54 Column: 2 }  }  52
Line: 57 Column: 1 }  }  52
Line: 57 Column: 1   <EOF>  0
Programa analizado
